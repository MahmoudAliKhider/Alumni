{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API"
  },
  "schemes": ["https","http"],
   "consumes": ["application/json"],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },

  "paths": {

    "/api/account/register": {
      "post": {
        "tags": ["account"],
        "summary": "Register a new user",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorValidationResponse"
            }
          }
        },
        "examples": {
          "request": {
            "summary": "Example request body",
            "value": {
              "userName": "mahmoud Khider",
              "email": "mahmoudkhider087@gmail.com",
              "phone": "01024897970",
              "password": "Pa$$w0rd",
              "address": "elsohada",
              "graduationYear": "2021",
              "dateOfBirth": "2001"
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "tags": ["account"],
        "summary": "Login ",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorValidationResponse"
            }
          }
        },
        "examples": {
          "request": {
            "summary": "Example request body",
            "value": {
              "email": "mahmoudkhider087@gmail.com",
              "password": "Pa$$w0rd"
            }
          }
        }
      }
    },
    "/api/account/forgetPassword": {
      "post": {
        "tags": ["account"],
        "summary": "forgetPassword ",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/forgetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorValidationResponse"
            }
          }
        },
        "examples": {
          "request": {
            "summary": "Example request body",
            "value": {
              "email": "mahmoudkhider087@gmail.com"
            }
          }
        }
      }
    },
    "/api/account/verifyPassResetCode": {
      "post": {
        "tags": ["account"],
        "summary": "forgetPassword ",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verifyPassResetCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserToken"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorValidationResponse"
            }
          }
        },
        "examples": {
          "request": {
            "summary": "Example request body",
            "value": {
              "resetCode": "123456"
            }
          }
        }
      }
    },
    "/api/account/resetPassword": {
      "post": {
        "tags": ["account"],
        "summary": "resetPassword ",
        "consumes": ["application/json"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Validation error"
          }
        },
        "examples": {
          "request": {
            "summary": "Example request body",
            "value": {
              "email": "mahmoudkhider087@gmail.com",
              "newPassword": "Pa$$w0rd"
            }
          }
        }
      }
    },

    "/api/user/getUser/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user by ID",

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to get the user"
          }
        }
      }
    },
    "/api/user/getAllUsers": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserInput"
              }
            }
          },
          "500": {
            "description": "Failed to get the users"
          }
        }
      }
    },
    "/api/user/addImage": {
      "post": {
        "tags": ["User"],
        "summary": "Add an image to a user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "imageUrl",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Image added successfully",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "No image provided"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to update the image"
          }
        }
      }
    },

    "/api/post/createPosts": {
      "post": {
        "tags": ["Post"],
        "summary": "Create a new post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "postImageUrl",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Post"
                }
              }
            }
          },
          "500": {
            "description": "Error creating post"
          }
        }
      }
    },
    "/api/post/posts": {
      "get": {
        "tags": ["Post"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all posts",
        "responses": {
          "200": {
            "description": "Posts retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error retrieving posts"
          }
        }
      }
    },
    "/api/post/{postId}": {
      "get": {
        "tags": ["Post"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get a post by ID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Error retrieving post"
          }
        }
      }
    },
    "/api/post/delete/{postId}": {
      "delete": {
        "tags": ["Post"],
        "summary": "Delete a post by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Error deleting post"
          }
        }
      }
    },
    "/api/post/update/{postId}": {
      "put": {
        "tags": ["Post"],
        "summary": "Update a post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "postImageUrl",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Error updating post"
          }
        }
      }
    },
    "/api/post/{postId}/like": {
      "post": {
        "tags": ["Post"],
        "summary": "Like/Unlike a post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post liked/unliked successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/Post"
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Error updating post"
          }
        }
      }
    },
    "/api/post/comment/{postId}": {
      "post": {
        "tags": ["Post"],
        "summary": "Add a comment to a post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
       
        "responses": {
          "201": {
            "description": "Comment added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {}
              }
            }
          },
          "404": {
            "description": "Post or user not found"
          },
          "500": {
            "description": "Error adding comment"
          }
        }
      }
    },
    

    "/api/myNetwork/{destinationUserId}": {
      "post": {
        "tags": ["Mynetwork"],
        "summary": "follow some user endpoint to follow another user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "destinationUserId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User follow/unfollow successfully",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error updating post"
          }
        }
      }
    },
    "/api/myNetwork/current-user-followers": {
      "get": {
        "tags": ["Mynetwork"],
        "summary": "end point for getting the followers who is the current user follow. \"People who is the current user follow\"",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "get followers successfully",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error updating post"
          }
        }
      }
    },
    "/api/myNetwork/current-user-followed-by": {
      "get": {
        "tags": ["Mynetwork"],
        "summary": "end point for getting the followed by users for the current user. \"People who follows the current user\"",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "get following successfully",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error updating post"
          }
        }
      }
    },

    "/api/message/{recipientId}": {
      "post": {
        "tags": ["messages"],
        "summary": "Send a new message",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the recipient user"
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        ],
        
        "responses": {
          "200": {
            "description": "Message sent successfully"
          },
          "500": {
            "description": "Error sending the message"
          }
        }
      }
    },
    "/api/message/thread/{recipientId}": {
      "get": {
        "tags": ["messages"],
        "summary": "Send a new message",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the recipient user"
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully"
          },
          "500": {
            "description": "Error sending the message"
          }
        }
      }
    },
    "/api/message/{messageId}": {
      "delete": {
        "tags": ["messages"],
        "summary": "Send a new message",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the messageId "
          }
        ],
        "responses": {
          "200": {
            "description": "Message Delete successfully"
          },
          "500": {
            "description": "Error Delete the message"
          }
        }
      }
    },

    "/api/notifications": {
      "get": {
        "tags": ["Notifications"],
        "summary": "Send a new Notifications",
        "security": [
          {
            "BearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "data": {}
          },
          "500": {
            "description": "Error retrieving notifications"
          }
        }
      }
    },
    "/api/notifications/{notificationId}": {
      "put": {
        "tags": ["Notifications"],
        "summary": "notification as read",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the notificationId "
          }
        ],

        "responses": {
          "200": {
            "data": {}
          },
          "500": {
            "description": "Error retrieving notifications"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "content": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "UserInput": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "graduationYear": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        } 
      }
    },
    "forgetPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "verifyPassResetCode": {
      "type": "object",
      "properties": {
        "resetCode": {
          "type": "string"
        }
      }
    },
    "resetPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "postImageUrl": {
          "type": "file"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Message content",
          "x-example": "Hello, this is a sample message."
        }
      }
    }
  }
}
